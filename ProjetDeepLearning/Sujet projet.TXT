Le contexte 
Vous êtes un data scientist pour un client (fictif ou non) et vous devez présenter une analyse de données complètes, de la spécification des besoins, élaboration d’une problématique pertinente ainsi qu’une mise en oeuvre technique d’un modele de deep learning respectant les conditions ci-dessous. 
Le livrable 
Jupyter notebook avec les datas (ou liens drive/kaggle/autre pour accéder aux datas si > 5Mo)
le travail devra être déposé sur un repo git et l’étudiant devra envoyer le lien par mail ou messagerie slack 
Contraintes 
Exposer concrètement votre problématique / question à définir : quel est le but de votre modèle et à quelle situation métier peut il correspondre 
Ne pas choisir 2 fois les meme données dans la calsse (@canal => tenir un gsheet avec les sujet de chacun)
Un maximum de commentaires dans votre code
Texte type Markdown après chaque cellule pertinente 
Tous les graphiques doivent être lisible (taille du graphique, infos représenté), si diagramme pas lisible, en faire une version filtrée dessous
Partie 1 : Analyse des données choisies (EDA)
Diagrammes de répartition des données (dire si elles sont équilibrées et ce que ca implique)
Feature engineering : nettoyage, augmentation, gestion des valeurs manquantes, encodage … 
Explication de votre travail avec vos terme (merci de ne pas me copier coller directement des choses que vous ne comprenez pas d’internet)
Partie 2: Model Building
Utiliser un réseaux de neurone (le choix dépends de vous et votre problematique)
Choix et affichage des metrics 
Explication de votre methode de sélection du meilleur paramétrage pour votre algorithme
Le model est-il en overfitting/underfitting/OK ?
Donner des preuves pour répondre à la question ci-dessus
Partie 3 : API, Conteneurisation et déploiement 
Deploiement de votre modele avec une des librairies suivantes: 
Fastapi
Flask 
Streamlit 
ou autre type bouton Jupiter 
Livraison sur git avec documentation, tests et README qui résume votre projet  
Faire une vidéo de moins de 10min en présentant votre sujet 
(bonus) faire un paquetage Docker de votre application